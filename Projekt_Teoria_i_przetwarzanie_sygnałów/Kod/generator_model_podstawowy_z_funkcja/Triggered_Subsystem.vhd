-- -------------------------------------------------------------
-- 
-- File Name: testzzadanymfreq3/lookupTable/Triggered_Subsystem.vhd
-- Created: 2020-01-14 23:05:21
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Triggered_Subsystem
-- Source Path: lookupTable/Triggered Subsystem
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Triggered_Subsystem IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        In1                               :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En8
        Trigger                           :   IN    std_logic;  -- ufix1
        Out1                              :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En17
        );
END Triggered_Subsystem;


ARCHITECTURE rtl OF Triggered_Subsystem IS

  -- Component Declarations
  COMPONENT MATLAB_Function
    PORT( freq                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En8
          previous_index                  :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En8
          y                               :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En17
          new_index                       :   OUT   std_logic_vector(18 DOWNTO 0)  -- ufix19_En8
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : MATLAB_Function
    USE ENTITY work.MATLAB_Function(rtl);

  -- Signals
  SIGNAL enb_gated                        : std_logic;
  SIGNAL Trigger_delayed                  : std_logic;  -- ufix1
  SIGNAL Trigger_emulated                 : std_logic;  -- ufix1
  SIGNAL new_index                        : std_logic_vector(18 DOWNTO 0);  -- ufix19
  SIGNAL new_index_unsigned               : unsigned(18 DOWNTO 0);  -- ufix19_En8
  SIGNAL Data_Type_Conversion_out1        : unsigned(17 DOWNTO 0);  -- ufix18_En8
  SIGNAL Memory_out1                      : unsigned(17 DOWNTO 0);  -- ufix18_En8
  SIGNAL y                                : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL y_signed                         : signed(17 DOWNTO 0);  -- sfix18_En17
  SIGNAL y_bypass                         : signed(17 DOWNTO 0);  -- sfix18_En17
  SIGNAL y_last_value                     : signed(17 DOWNTO 0);  -- sfix18_En17

BEGIN
  u_MATLAB_Function : MATLAB_Function
    PORT MAP( freq => In1,  -- sfix18_En8
              previous_index => std_logic_vector(Memory_out1),  -- ufix18_En8
              y => y,  -- sfix18_En17
              new_index => new_index  -- ufix19_En8
              );

  Trigger_delay_process: PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Trigger_delayed <= '1';
    ELSIF clk'event AND clk = '1' THEN
      IF enb = '1' THEN
        Trigger_delayed <= Trigger;
      END IF;
    END IF;
  END PROCESS Trigger_delay_process;

  Trigger_emulated <= NOT Trigger_delayed AND Trigger;

  enb_gated <= Trigger_emulated AND enb;

  new_index_unsigned <= unsigned(new_index);

  Data_Type_Conversion_out1 <= new_index_unsigned(17 DOWNTO 0);

  Memory_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Memory_out1 <= to_unsigned(16#00000#, 18);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated = '1' THEN
        Memory_out1 <= Data_Type_Conversion_out1;
      END IF;
    END IF;
  END PROCESS Memory_process;


  y_signed <= signed(y);

  Out1_bypass_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      y_last_value <= to_signed(16#00000#, 18);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_gated = '1' THEN
        y_last_value <= y_bypass;
      END IF;
    END IF;
  END PROCESS Out1_bypass_process;


  
  y_bypass <= y_last_value WHEN Trigger_emulated = '0' ELSE
      y_signed;

  Out1 <= std_logic_vector(y_bypass);

END rtl;

