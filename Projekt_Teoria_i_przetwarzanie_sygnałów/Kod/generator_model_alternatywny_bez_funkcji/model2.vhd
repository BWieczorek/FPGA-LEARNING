-- -------------------------------------------------------------
-- 
-- File Name: wewo2/model2/model2.vhd
-- Created: 2020-01-15 09:30:22
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-09
-- Target subsystem base rate: 1e-06
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-06
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- sinWave                       ce_out        1e-06
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: model2
-- Source Path: model2
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.model2_pkg.ALL;

ENTITY model2 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        sinWave                           :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En17
        );
END model2;


ARCHITECTURE rtl OF model2 IS

  -- Constants
  CONSTANT alpha1_D_Lookup_Table_data     : vector_of_signed18(0 TO 255) := 
    (to_signed(16#00000#, 18), to_signed(16#00C9D#, 18), to_signed(16#01938#, 18), to_signed(16#025D0#, 18),
     to_signed(16#03261#, 18), to_signed(16#03EEB#, 18), to_signed(16#04B6A#, 18), to_signed(16#057DE#, 18),
     to_signed(16#06445#, 18), to_signed(16#0709C#, 18), to_signed(16#07CE1#, 18), to_signed(16#08913#, 18),
     to_signed(16#09530#, 18), to_signed(16#0A135#, 18), to_signed(16#0AD21#, 18), to_signed(16#0B8F3#, 18),
     to_signed(16#0C4A8#, 18), to_signed(16#0D03E#, 18), to_signed(16#0DBB4#, 18), to_signed(16#0E707#, 18),
     to_signed(16#0F237#, 18), to_signed(16#0FD41#, 18), to_signed(16#10824#, 18), to_signed(16#112DE#, 18),
     to_signed(16#11D6D#, 18), to_signed(16#127CF#, 18), to_signed(16#13204#, 18), to_signed(16#13C09#, 18),
     to_signed(16#145DD#, 18), to_signed(16#14F7F#, 18), to_signed(16#158EC#, 18), to_signed(16#16224#, 18),
     to_signed(16#16B24#, 18), to_signed(16#173EC#, 18), to_signed(16#17C7B#, 18), to_signed(16#184CE#, 18),
     to_signed(16#18CE5#, 18), to_signed(16#194BE#, 18), to_signed(16#19C58#, 18), to_signed(16#1A3B2#, 18),
     to_signed(16#1AACB#, 18), to_signed(16#1B1A2#, 18), to_signed(16#1B835#, 18), to_signed(16#1BE84#, 18),
     to_signed(16#1C48D#, 18), to_signed(16#1CA50#, 18), to_signed(16#1CFCC#, 18), to_signed(16#1D500#, 18),
     to_signed(16#1D9EB#, 18), to_signed(16#1DE8C#, 18), to_signed(16#1E2E3#, 18), to_signed(16#1E6EF#, 18),
     to_signed(16#1EAAF#, 18), to_signed(16#1EE23#, 18), to_signed(16#1F14A#, 18), to_signed(16#1F424#, 18),
     to_signed(16#1F6B0#, 18), to_signed(16#1F8EE#, 18), to_signed(16#1FADE#, 18), to_signed(16#1FC7E#, 18),
     to_signed(16#1FDD0#, 18), to_signed(16#1FED3#, 18), to_signed(16#1FF86#, 18), to_signed(16#1FFE9#, 18),
     to_signed(16#1FFFE#, 18), to_signed(16#1FFC2#, 18), to_signed(16#1FF37#, 18), to_signed(16#1FE5D#, 18),
     to_signed(16#1FD33#, 18), to_signed(16#1FBBA#, 18), to_signed(16#1F9F2#, 18), to_signed(16#1F7DC#, 18),
     to_signed(16#1F577#, 18), to_signed(16#1F2C4#, 18), to_signed(16#1EFC4#, 18), to_signed(16#1EC77#, 18),
     to_signed(16#1E8DD#, 18), to_signed(16#1E4F7#, 18), to_signed(16#1E0C6#, 18), to_signed(16#1DC4B#, 18),
     to_signed(16#1D785#, 18), to_signed(16#1D276#, 18), to_signed(16#1CD1E#, 18), to_signed(16#1C77F#, 18),
     to_signed(16#1C199#, 18), to_signed(16#1BB6D#, 18), to_signed(16#1B4FC#, 18), to_signed(16#1AE47#, 18),
     to_signed(16#1A750#, 18), to_signed(16#1A016#, 18), to_signed(16#1989C#, 18), to_signed(16#190E3#, 18),
     to_signed(16#188EB#, 18), to_signed(16#180B6#, 18), to_signed(16#17845#, 18), to_signed(16#16F9A#, 18),
     to_signed(16#166B6#, 18), to_signed(16#15D9A#, 18), to_signed(16#15448#, 18), to_signed(16#14AC0#, 18),
     to_signed(16#14106#, 18), to_signed(16#13719#, 18), to_signed(16#12CFC#, 18), to_signed(16#122B1#, 18),
     to_signed(16#11838#, 18), to_signed(16#10D94#, 18), to_signed(16#102C5#, 18), to_signed(16#0F7CF#, 18),
     to_signed(16#0ECB2#, 18), to_signed(16#0E170#, 18), to_signed(16#0D60B#, 18), to_signed(16#0CA85#, 18),
     to_signed(16#0BEE0#, 18), to_signed(16#0B31C#, 18), to_signed(16#0A73D#, 18), to_signed(16#09B44#, 18),
     to_signed(16#08F33#, 18), to_signed(16#0830C#, 18), to_signed(16#076D0#, 18), to_signed(16#06A82#, 18),
     to_signed(16#05E23#, 18), to_signed(16#051B6#, 18), to_signed(16#0453B#, 18), to_signed(16#038B7#, 18),
     to_signed(16#02C29#, 18), to_signed(16#01F94#, 18), to_signed(16#012FB#, 18), to_signed(16#0065E#, 18),
     to_signed(-16#0063F#, 18), to_signed(-16#012DB#, 18), to_signed(-16#01F75#, 18), to_signed(-16#02C09#, 18),
     to_signed(-16#03897#, 18), to_signed(-16#0451C#, 18), to_signed(-16#05196#, 18), to_signed(-16#05E04#, 18),
     to_signed(-16#06A63#, 18), to_signed(-16#076B1#, 18), to_signed(-16#082ED#, 18), to_signed(-16#08F15#, 18),
     to_signed(-16#09B26#, 18), to_signed(-16#0A720#, 18), to_signed(-16#0B2FF#, 18), to_signed(-16#0BEC2#, 18),
     to_signed(-16#0CA68#, 18), to_signed(-16#0D5EF#, 18), to_signed(-16#0E154#, 18), to_signed(-16#0EC96#, 18),
     to_signed(-16#0F7B3#, 18), to_signed(-16#102AA#, 18), to_signed(-16#10D79#, 18), to_signed(-16#1181E#, 18),
     to_signed(-16#12297#, 18), to_signed(-16#12CE3#, 18), to_signed(-16#13700#, 18), to_signed(-16#140ED#, 18),
     to_signed(-16#14AA8#, 18), to_signed(-16#15430#, 18), to_signed(-16#15D83#, 18), to_signed(-16#166A0#, 18),
     to_signed(-16#16F84#, 18), to_signed(-16#17830#, 18), to_signed(-16#180A1#, 18), to_signed(-16#188D7#, 18),
     to_signed(-16#190CF#, 18), to_signed(-16#19889#, 18), to_signed(-16#1A004#, 18), to_signed(-16#1A73E#, 18),
     to_signed(-16#1AE36#, 18), to_signed(-16#1B4EC#, 18), to_signed(-16#1BB5D#, 18), to_signed(-16#1C18A#, 18),
     to_signed(-16#1C770#, 18), to_signed(-16#1CD10#, 18), to_signed(-16#1D269#, 18), to_signed(-16#1D779#, 18),
     to_signed(-16#1DC3F#, 18), to_signed(-16#1E0BC#, 18), to_signed(-16#1E4ED#, 18), to_signed(-16#1E8D4#, 18),
     to_signed(-16#1EC6E#, 18), to_signed(-16#1EFBC#, 18), to_signed(-16#1F2BD#, 18), to_signed(-16#1F571#, 18),
     to_signed(-16#1F7D6#, 18), to_signed(-16#1F9ED#, 18), to_signed(-16#1FBB6#, 18), to_signed(-16#1FD30#, 18),
     to_signed(-16#1FE5A#, 18), to_signed(-16#1FF35#, 18), to_signed(-16#1FFC1#, 18), to_signed(-16#1FFFD#, 18),
     to_signed(-16#1FFEA#, 18), to_signed(-16#1FF87#, 18), to_signed(-16#1FED5#, 18), to_signed(-16#1FDD3#, 18),
     to_signed(-16#1FC82#, 18), to_signed(-16#1FAE2#, 18), to_signed(-16#1F8F3#, 18), to_signed(-16#1F6B6#, 18),
     to_signed(-16#1F42B#, 18), to_signed(-16#1F152#, 18), to_signed(-16#1EE2B#, 18), to_signed(-16#1EAB8#, 18),
     to_signed(-16#1E6F9#, 18), to_signed(-16#1E2EE#, 18), to_signed(-16#1DE97#, 18), to_signed(-16#1D9F7#, 18),
     to_signed(-16#1D50D#, 18), to_signed(-16#1CFDA#, 18), to_signed(-16#1CA5E#, 18), to_signed(-16#1C49C#, 18),
     to_signed(-16#1BE93#, 18), to_signed(-16#1B845#, 18), to_signed(-16#1B1B3#, 18), to_signed(-16#1AADD#, 18),
     to_signed(-16#1A3C4#, 18), to_signed(-16#19C6B#, 18), to_signed(-16#194D1#, 18), to_signed(-16#18CF9#, 18),
     to_signed(-16#184E2#, 18), to_signed(-16#17C90#, 18), to_signed(-16#17402#, 18), to_signed(-16#16B3A#, 18),
     to_signed(-16#1623A#, 18), to_signed(-16#15903#, 18), to_signed(-16#14F96#, 18), to_signed(-16#145F6#, 18),
     to_signed(-16#13C22#, 18), to_signed(-16#1321D#, 18), to_signed(-16#127E9#, 18), to_signed(-16#11D87#, 18),
     to_signed(-16#112F8#, 18), to_signed(-16#1083F#, 18), to_signed(-16#0FD5D#, 18), to_signed(-16#0F253#, 18),
     to_signed(-16#0E723#, 18), to_signed(-16#0DBD0#, 18), to_signed(-16#0D05B#, 18), to_signed(-16#0C4C5#, 18),
     to_signed(-16#0B910#, 18), to_signed(-16#0AD3F#, 18), to_signed(-16#0A153#, 18), to_signed(-16#0954E#, 18),
     to_signed(-16#08931#, 18), to_signed(-16#07D00#, 18), to_signed(-16#070BA#, 18), to_signed(-16#06464#, 18),
     to_signed(-16#057FD#, 18), to_signed(-16#04B8A#, 18), to_signed(-16#03F0A#, 18), to_signed(-16#03280#, 18),
     to_signed(-16#025EF#, 18), to_signed(-16#01958#, 18), to_signed(-16#00CBD#, 18), to_signed(-16#0001F#, 18));  -- sfix18 [256]

  -- Signals
  SIGNAL enb_1_1000_0                     : std_logic;
  SIGNAL Constant_out1                    : unsigned(17 DOWNTO 0);  -- ufix18_En10
  SIGNAL Constant1_out1                   : unsigned(17 DOWNTO 0);  -- ufix18_En10
  SIGNAL Constant3_out1                   : unsigned(17 DOWNTO 0);  -- ufix18_En10
  SIGNAL Constant2_out1                   : unsigned(17 DOWNTO 0);  -- ufix18_En10
  SIGNAL Sum_out1                         : unsigned(31 DOWNTO 0);  -- ufix32_En10
  SIGNAL Relational_Operator_1_cast       : unsigned(31 DOWNTO 0);  -- ufix32_En10
  SIGNAL Relational_Operator_relop1       : std_logic;
  SIGNAL Switch_out1                      : unsigned(17 DOWNTO 0);  -- ufix18_En10
  SIGNAL Data_Type_Conversion_out1        : unsigned(17 DOWNTO 0);  -- ufix18_En10
  SIGNAL Unit_Delay_out1                  : unsigned(17 DOWNTO 0);  -- ufix18_En10
  SIGNAL Sum_add_cast                     : unsigned(31 DOWNTO 0);  -- ufix32_En10
  SIGNAL Sum_add_cast_1                   : unsigned(31 DOWNTO 0);  -- ufix32_En10
  SIGNAL Sum1_sub_cast                    : unsigned(31 DOWNTO 0);  -- ufix32_En10
  SIGNAL Sum1_out1                        : unsigned(31 DOWNTO 0);  -- ufix32_En10
  SIGNAL alpha1_D_Lookup_Table_out1       : signed(17 DOWNTO 0);  -- sfix18_En17

BEGIN
  Constant_out1 <= to_unsigned(16#01400#, 18);

  enb_1_1000_0 <= clk_enable;

  Constant1_out1 <= to_unsigned(16#3FC00#, 18);

  Constant3_out1 <= to_unsigned(16#3FC00#, 18);

  Constant2_out1 <= to_unsigned(16#00000#, 18);

  Relational_Operator_1_cast <= resize(Constant1_out1, 32);
  
  Relational_Operator_relop1 <= '1' WHEN Sum_out1 <= Relational_Operator_1_cast ELSE
      '0';

  
  Switch_out1 <= Constant3_out1 WHEN Relational_Operator_relop1 = '0' ELSE
      Constant2_out1;

  Unit_Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay_out1 <= to_unsigned(16#00000#, 18);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_1000_0 = '1' THEN
        Unit_Delay_out1 <= Data_Type_Conversion_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay_process;


  Sum_add_cast <= resize(Constant_out1, 32);
  Sum_add_cast_1 <= resize(Unit_Delay_out1, 32);
  Sum_out1 <= Sum_add_cast + Sum_add_cast_1;

  Sum1_sub_cast <= resize(Switch_out1, 32);
  Sum1_out1 <= Sum_out1 - Sum1_sub_cast;

  Data_Type_Conversion_out1 <= Sum1_out1(17 DOWNTO 0);

  alpha1_D_Lookup_Table_output : PROCESS (Data_Type_Conversion_out1)
    VARIABLE dout_low : signed(17 DOWNTO 0);
    VARIABLE k : unsigned(7 DOWNTO 0);
    VARIABLE f : unsigned(31 DOWNTO 0);
    VARIABLE in0 : unsigned(17 DOWNTO 0);
    VARIABLE add_cast : signed(50 DOWNTO 0);
    VARIABLE cast : signed(32 DOWNTO 0);
    VARIABLE sub_temp : signed(17 DOWNTO 0);
    VARIABLE mul_temp : signed(50 DOWNTO 0);
    VARIABLE add_cast_0 : signed(49 DOWNTO 0);
    VARIABLE add_cast_1 : signed(50 DOWNTO 0);
    VARIABLE add_temp : signed(50 DOWNTO 0);
  BEGIN
    IF Data_Type_Conversion_out1 = to_unsigned(16#00000#, 18) THEN 
      k := to_unsigned(16#00#, 8);
    ELSIF Data_Type_Conversion_out1 >= to_unsigned(16#3FC00#, 18) THEN 
      k := to_unsigned(16#FF#, 8);
    ELSE 
      k := Data_Type_Conversion_out1(17 DOWNTO 10);
    END IF;
    IF (Data_Type_Conversion_out1 = to_unsigned(16#00000#, 18)) OR (Data_Type_Conversion_out1 >= to_unsigned(16#3FC00#, 18)) THEN 
      f := to_unsigned(0, 32);
    ELSE 
      in0 := Data_Type_Conversion_out1 AND to_unsigned(16#003FF#, 18);
      f := in0(9 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
    END IF;
    dout_low := alpha1_D_Lookup_Table_data(to_integer(k));
    IF k = to_unsigned(16#FF#, 8) THEN 
      NULL;
    ELSE 
      k := k + to_unsigned(16#01#, 8);
    END IF;
    add_cast := resize(dout_low & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 51);
    cast := signed(resize(f, 33));
    sub_temp := alpha1_D_Lookup_Table_data(to_integer(k)) - dout_low;
    mul_temp := cast * sub_temp;
    add_cast_0 := mul_temp(49 DOWNTO 0);
    add_cast_1 := resize(add_cast_0, 51);
    add_temp := add_cast + add_cast_1;
    alpha1_D_Lookup_Table_out1 <= add_temp(49 DOWNTO 32);
  END PROCESS alpha1_D_Lookup_Table_output;


  sinWave <= std_logic_vector(alpha1_D_Lookup_Table_out1);

  ce_out <= clk_enable;

END rtl;

